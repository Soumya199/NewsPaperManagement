//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewsPaperAdvertisementManagement.Models
{
    using Newtonsoft.Json;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class Customer
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Customer()
        {
            this.Advertisements = new HashSet<Advertisement>();
            this.ReportProblems = new HashSet<ReportProblem>();
        }
        [Required(ErrorMessage = "Name cannot be empty")]
        [RegularExpression("^[a-zA-Z ]{2,40}$", ErrorMessage = "Name should contain alphabets only")]
        [DisplayName("Customer Name")]
        public string CustomerName { get; set; }
        [Required(ErrorMessage = "Email cannot be empty!")]
        [RegularExpression(@"\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*", ErrorMessage = "Email is invalid.")]
        [DisplayName("Customer Email")]
        [DataType(DataType.EmailAddress)]
        public string CustomerEmailId { get; set; }
        [Required(ErrorMessage = "Mobile number can't be blank.")]
        [RegularExpression(@"^([0-9]{10})$", ErrorMessage = "Mobile number should be of 10 digits.")]
        [Range(0, 9999999999)]
        [DisplayName("Customer Phone")]
        public string CustomerPhone { get; set; }
        [Required (ErrorMessage ="Password Cant be empty")]
        [DisplayName("Customer Address")]
        public string CustomerAddress { get; set; }
        [Required(ErrorMessage = "Password cannot be empty!")]
        [RegularExpression(@"((?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{6,15})", ErrorMessage = "Password should be 6 to 15 characters with at least one digit, one uppercase letter, one lower case letter.")]
        [DisplayName("Password")]
        [DataType(DataType.Password)]
        public string CustomerPssword { get; set; }
       
        [Compare("CustomerPssword", ErrorMessage = "Password does not match!")]
        [DisplayName("Confirm Password")]
        public string ConfirmPassword { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Advertisement> Advertisements { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ReportProblem> ReportProblems { get; set; }
    }
}
